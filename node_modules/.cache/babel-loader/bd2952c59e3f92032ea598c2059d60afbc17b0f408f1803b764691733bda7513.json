{"ast":null,"code":"var _jsxFileName = \"/Users/gimgeonhwi/Documents/Projects/kimjeju_port_folio_source/src/Sections/Email/SendMail.js\",\n  _s = $RefreshSig$();\nimport emailjs from 'emailjs-com';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendMail({\n  setOpenMailModal\n}) {\n  _s();\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [fromName, setFromName] = useState(\"\");\n  const [fromEmail, setFromEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const onChangeFromName = e => {\n    setFromName(e.target.value);\n  };\n  const onChangeFromEmail = e => {\n    setFromEmail(e.target.value);\n  };\n  const onChangePhone = e => {\n    setPhone(e.target.value);\n  };\n  const onChangeMessage = e => {\n    setMessage(e.target.value);\n  };\n  const sendVerificationEmail = () => {\n    // 이메일 보내기\n    // 여기서 정의해야하는 것은 위에서 만든 메일 템플릿에 지정한 변수({{ }})에 대한 값을 담아줘야한다.\n    const templateParams = {\n      to_name: \"김건휘\",\n      from_name: fromName,\n      from_email: fromEmail,\n      phone: phone,\n      message: message\n    };\n    emailjs.send('service_sy1xtvp',\n    // 서비스 ID\n    'template_kddvesk',\n    // 템플릿 ID\n    templateParams, 'LOg6PzOiGcWr3UC6-' // public-key\n    ).then(response => {\n      console.log('이메일이 성공적으로 보내졌습니다:', response);\n      setIsEmailSent(true);\n      // 이메일 전송 성공 처리 로직 추가\n    }).catch(error => {\n      console.error('이메일 보내기 실패:', error);\n      // 이메일 전송 실패 처리 로직 추가\n    });\n  };\n  const handleVerification = () => {\n    sendVerificationEmail();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onChangeFromName,\n      value: fromName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      onChange: onChangeFromEmail,\n      value: fromEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      onChange: onChangePhone,\n      value: phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: onChangeMessage,\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), isEmailSent ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC778\\uC99D \\uC774\\uBA54\\uC77C\\uC774 \\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uBC1C\\uC1A1\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4. \\uC774\\uBA54\\uC77C\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerification,\n      children: \"\\uC778\\uC99D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(SendMail, \"NyTM1L3ftxYjZ6Ky9afvmqzbKhs=\");\n_c = SendMail;\nexport default SendMail;\nvar _c;\n$RefreshReg$(_c, \"SendMail\");","map":{"version":3,"names":["emailjs","useState","jsxDEV","_jsxDEV","SendMail","setOpenMailModal","_s","isEmailSent","setIsEmailSent","fromName","setFromName","fromEmail","setFromEmail","phone","setPhone","message","setMessage","onChangeFromName","e","target","value","onChangeFromEmail","onChangePhone","onChangeMessage","sendVerificationEmail","templateParams","to_name","from_name","from_email","send","then","response","console","log","catch","error","handleVerification","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gimgeonhwi/Documents/Projects/kimjeju_port_folio_source/src/Sections/Email/SendMail.js"],"sourcesContent":["import emailjs from 'emailjs-com';\nimport { useState } from 'react';\n\nfunction SendMail({ setOpenMailModal }) {\n    const [isEmailSent, setIsEmailSent] = useState(false);\n\n    const [fromName, setFromName] = useState(\"\");\n    const [fromEmail, setFromEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeFromName = (e) => {\n        setFromName(e.target.value);\n    };\n\n    const onChangeFromEmail = (e) => {\n        setFromEmail(e.target.value);\n    };\n    const onChangePhone = (e) => {\n        setPhone(e.target.value);\n    };\n    const onChangeMessage = (e) => {\n        setMessage(e.target.value);\n    };\n\n    const sendVerificationEmail = () => {\n        // 이메일 보내기\n        // 여기서 정의해야하는 것은 위에서 만든 메일 템플릿에 지정한 변수({{ }})에 대한 값을 담아줘야한다.\n        const templateParams = {\n            to_name: \"김건휘\",\n            from_name: fromName,\n            from_email: fromEmail,\n            phone: phone,\n            message: message\n        };\n\n        emailjs\n            .send(\n                'service_sy1xtvp', // 서비스 ID\n                'template_kddvesk', // 템플릿 ID\n                templateParams,\n                'LOg6PzOiGcWr3UC6-' // public-key\n            )\n            .then((response) => {\n                console.log('이메일이 성공적으로 보내졌습니다:', response);\n                setIsEmailSent(true);\n                // 이메일 전송 성공 처리 로직 추가\n            })\n            .catch((error) => {\n                console.error('이메일 보내기 실패:', error);\n                // 이메일 전송 실패 처리 로직 추가\n            });\n    };\n\n    const handleVerification = () => {\n        sendVerificationEmail();\n    };\n\n    return (\n        <div>\n            <input type='text'  onChange={onChangeFromName} value={fromName}/>\n            <input type='email' onChange={onChangeFromEmail} value={fromEmail} />\n            <input type='tel' onChange={onChangePhone} value={phone}/>\n            <input type='text' onChange={onChangeMessage} value={message}/>\n\n            <h2>이메일 인증</h2>\n            {isEmailSent ? (\n                <p>\n                    인증 이메일이 성공적으로 발송되었습니다. 이메일을\n                    확인해주세요!\n                </p>\n            ) : (\n                <button onClick={handleVerification}>인증</button>\n            )}\n        </div>\n    );\n}\n\nexport default SendMail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}